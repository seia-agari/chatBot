// ===== マニュアルQ&A（講師向け・正式文面） =====

// --- Q&Aデータ ---
const QA = [
  // 【理念・目標編】
  {
    q: "理念（スマイルスタディの理念は？）",
    kws: ["理念","想い","ビジョン","方針","スマイルスタディ"],
    a: `【回答】
スマイルスタディの理念は「子どもたちの夢や目標を叶える応援がしたい」という想いを、講師全員で共有することです。入塾前の成績に関わらず、一人ひとりの可能性を最後まで信じ、成長に寄り添います。`
  },
  {
    q: "教室全体の目標は？",
    kws: ["目標","全員成績アップ","全員合格","職場","働き甲斐"],
    a: `【回答】
教室全体の目標は次の3点です。
・全員成績アップ
・全員合格
・楽しく、働き甲斐のある職場づくり`
  },
  {
    q: "講師の主な仕事は？",
    kws: ["講師の仕事","役割","業務","成績アップ","合格","日程","変更","ミスゼロ","2日以内"],
    a: `【回答】
講師の主な仕事は以下の2点です。
1) 成績アップ・志望校合格：目標と現状のギャップを把握し、計画的に埋めていきます。
2) 授業日程案内・変更対応：保護者様との連絡を丁寧に行い、「ミスゼロ」を徹底。原則「2日以内対応」を守ります。`
  },

  // 【指導方針・4つのSC】
  {
    q: "4つのSCとは？",
    kws: ["4つのSC","SC","指導方針","カリキュラム","習慣化","コーチング","コミュニティ"],
    a: `【回答】
次の4つを総称して「SC」と呼びます。
・Smile Curriculum：学びの設計とPDCAの運用
・Self Control：学習の習慣化と自己管理
・Smart Coaching：寄り添い、行動を引き出す関わり
・Study Community：学び合う空間の創出`
  },
  {
    q: "SC実践のポイント",
    kws: ["SCのポイント","実践","目的","成果","宿題","意義","生活面","共有","モチベーション","SC"],
    a: `【回答】
SCを効果的に実践するための要点は次の通りです。
・毎回の授業で「目的」と「成果」を明確化する
・宿題の意味を説明し、単なる作業から「やる意義」へ転換する
・勉強だけでなく生活面にも関心を払い、継続を支える
・生徒同士で努力や工夫を共有し、モチベーションを高める`
  },

  // 【授業・報告書編】
  {
    q: "指導報告書の公開期限",
    kws: ["報告書","指導報告書","公開","締切","期限","21:50"],
    a: `【回答】
指導報告書は「当日21:50まで」に公開してください。時間厳守でお願いします。`
  },
  {
    q: "報告書コメントの書き方",
    kws: ["報告書","コメント","書き方","文字数","170文字","丁寧","誤字","脱字"],
    a: `【回答】
コメント欄は「170文字以上」を目安に、以下を具体的に記載してください。
・本日の指導内容（扱った単元、取り組ませた課題）
・生徒の様子（理解度、良かった点、つまずき）
・今後の課題と次回の方針
※公開前に変換ミスや脱字の最終確認を行ってください。`
  },
  {
    q: "連続授業時の報告書",
    kws: ["連続授業","2コマ連続","複数コマ","報告","1コマずつ"],
    a: `【回答】
連続授業であっても、指導報告書は必ず「1コマごと」に作成・公開してください。`
  },

  // 【欠席・振替対応編】
  {
    q: "振替の連絡期限",
    kws: ["振替","欠席","連絡タイミング","前日21時","当日90分前","無断欠席"],
    a: `【回答】
振替の可否は次の通りです。
・前日21:00まで：振替可
・当日開始90分前まで：振替可
・それ以降や無断欠席：振替不可
※例外対応が必要な場合は、必ず運営に相談してください。`
  },
  {
    q: "欠席時の報告書",
    kws: ["欠席","報告書","記録","振替対象外","当日欠席"],
    a: `【回答】
欠席の場合は、報告書を「欠席」として登録し、返信欄に「振替対象外である旨」を明記してください。`
  },

  // 【カレンダー・お知らせ編】
  {
    q: "カレンダー変更の手順",
    kws: ["カレンダー","日程変更","保護者了承","調整","更新"],
    a: `【回答】
日程変更は次の順で実施してください。
1) 生徒本人と調整（学習計画に支障がないか確認）
2) 保護者の了承を得る（連絡手段はComiru推奨）
3) 了承確認後にカレンダーを更新`
  },
  {
    q: "カレンダーURLの使い道",
    kws: ["カレンダーURL","お知らせ","Comiru","共有","リンク"],
    a: `【回答】
カレンダーURLは、Comiruのお知らせ本文に貼り付けて保護者へ共有します。`
  },

  // 【面談編】
  {
    q: "面談の目的",
    kws: ["面談","目的","共有","学習状況","成績","方針","保護者"],
    a: `【回答】
面談の目的は、生徒の学習状況・成績・今後の方針を保護者と共有し、最適な学習環境を提案することです。期待値のすり合わせを丁寧に行います。`
  },
  {
    q: "面談準備でやること",
    kws: ["面談準備","資料","通知表","模試","A4","1〜2枚","面談"],
    a: `【回答】
面談前に必ず以下を行ってください。
・成績資料（通知表・模試結果等）の事前回収
・当日の説明用「面談資料（A4/1〜2枚）」の作成（現状・課題・提案を簡潔に整理）`
  },
  {
    q: "面談の業務フロー",
    kws: ["面談準備","資料","内容","手順","準備","面談"],
    a: `【回答】
面談は以下の5ステップで行います。

1. 面談日時のアポ取り・成績資料の入手
    - 授業報告書で日程提案 → 確定後カレンダー登録・塾長へLINE報告
    - 成績資料（通知表・模試結果など）を必ず事前に入手
2. 面談資料作成
    - A4 1〜2枚、Word作成
    - 保護者用1部印刷（印刷は上利が対応）、データをLINE送信
    - 記載内容：成績分析・課題と改善案・今後の方針・注意点
3. 面談実施（30〜40分）
    - 早めの準備、明るく丁寧な挨拶
    - 約束事はメモ、成績資料をしっかり把握
4. Comiru「お知らせ」作成（当日中）
    - 面談まとめを作成し下書き保存、塾長にLINE報告
    - ネクストアクションを具体的に明記
5. Comiru「面談記録」作成（関係者共有用）
    - 面談日時と内容を入力し保存
    - 他講師への依頼があればLINEで連絡`
  },
  // 【引継ぎ編】
  {
    q: "引継ぎ資料の5項目",
    kws: ["引継ぎ","資料","5項目","基本情報","理解度","使用教材","進捗","ルーティン","注意点"],
    a: `【回答】
引継ぎ資料には、最低限以下の5項目を明記してください。
1) 生徒の基本情報・性格・通塾状況
2) 教科ごとの理解度・課題・目標
3) 使用教材と進捗
4) 授業の進め方・ルーティン
5) 注意点や特記事項（配慮事項を含む）`
  },
  {
    q: "引継ぎ資料の期限",
    kws: ["引継ぎ","資料","期限"],
    a: `【回答】
引継ぎ資料はWordファイル（A4サイズ1〜2枚程度）で作成し、上利へLINEで送付してください。

提出期限は担当が変わる月の末日16:00までです。報酬は生徒管理業務に含まれ、期限厳守です。提出が遅れると新担当の授業に支障をきたすため必ず守ってください。`
  },

  // 【体験授業編】
  {
    q: "体験授業の到着時間",
    kws: ["体験授業","到着","10分前","集合","遅刻"],
    a: `【回答】
体験授業当日は、授業開始「10分前」までに必ず到着してください。準備とヒアリングの時間を確保します。`
  },
  {
    q: "体験授業で意識すること",
    kws: ["体験授業","意識","Before After","成功体験","この先生に教わったから"],
    a: `【回答】
授業内では「Before→After」を体験させ、「この先生に教わったから解けた！」という成功体験を必ず作ってください。具体的な解き方の型や再現手順を持ち帰らせます。`
  },
  {
    q: "体験授業の流れ",
    kws: ["体験授業","流れ","構成"],
    a: `【回答】
体験授業はサンドイッチ形式で行います。

1. 最初の面談（保護者・生徒）
    - 学習状況（成績・苦手科目・勉強習慣）をヒアリング
    - 塾に何を求めているかを確認（成績アップ・自習習慣・受験対策など）
    - 生徒が話しやすい雰囲気を作る
2. 授業
    - 生徒タイプに合わせた関わり（やる気が薄い場合は雑談で緊張をほぐす）
    - Before→Afterの成功体験を与える（簡単な問題でOK）
3. 最後の面談
    - この塾でどう成長できるか未来像を提案
    - 例：「英語文法を整理しながら長文読解に自信を」「数学は基礎から復習して関数につなげる」`
  },


  // 【日程変更の注意点】
  {
    q: "講師都合のNG理由",
    kws: ["日程変更","講師都合","NG","理由","曖昧","優劣","他の生徒"],
    a: `【回答】
講師都合の変更で避けるべきNG理由の例：
・「他の生徒のコマと重なったため」
・「私情により」など曖昧で優劣を感じさせる表現
必要な場合は、具体的で誠実な説明と、代替日時の複数提案を添えてください。`
  },
  {
    q: "変更時の基本フロー",
    kws: ["変更フロー","生徒了承","保護者連絡","理由明記","カレンダー更新","Comiru"],
    a: `【回答】
変更時の基本フローは以下の通りです。
1) 生徒本人に説明し、了承を得る
2) Comiruで保護者に「理由を明記」して連絡
3) 了承確認後にカレンダーを更新`
  },

  // 【困ったとき】
  {
    q: "不安や疑問がある時の相談先",
    kws: ["困った","不安","疑問","相談","上利","塾長","ヘルプ"],
    a: `【回答】
不安や疑問がある場合は、一人で抱え込まず、必ず上利または塾長へ相談してください。早期共有が最善策につながります。`
  },
];

// --- 検索ロジック（簡易） ---
function normalize(s){
  return (s || "")
    .toLowerCase()
    .replace(/\s+/g, "")
    .replace(/[！!？?。．、,\.：:・\-—–]/g, "");
}

function score(entry, text){
  const t = normalize(text);
  let s = 0;
  for(const k of entry.kws){
    if(t.includes(normalize(k))) s += 2; // キーワード一致を強めに
  }
  if(t.includes(normalize(entry.q))) s += 1; // 見出し一致
  return s;
}

// 「Q12」「q12」のように番号から直接検索できる補助
function findByNumber(text){
  const m = String(text).trim().match(/^q?\s*(\d{1,2})$/i);
  if(!m) return null;
  const idx = Number(m[1]) - 1;
  return (idx >= 0 && idx < QA.length) ? QA[idx] : null;
}

function answer(text) {
  // 1) Q番号直指定
  const direct = findByNumber(text);
  if (direct) return formatAnswer(direct);

  // 2) スコア上位3件
  const scored = QA.map(item => ({ item, sc: score(item, text) }))
                   .filter(o => o.sc > 0)
                   .sort((a, b) => b.sc - a.sc)
                   .slice(0, 3);
  if (scored.length > 0) {
    return scored
      .map(o => formatAnswer(o.item))
      .join("\n\n---\n\n"); // 区切り線で結合
  }

  // 3) ヒットなし
  return [
    "該当する回答が見つかりませんでした。次のキーワードでお試しください。",
    "例）「振替」「報告書 コメント」「面談 目的」「引継ぎ 5項目」",
    "または「Q12」のように番号指定も可能です。"
  ].join("\n");
}

function formatAnswer(entry){
  return `【項目】${entry.q}\n${entry.a}`;
}

// --- UI ---
const form = document.getElementById('f');
const input = document.getElementById('q');
const log = document.getElementById('log');

function push(type, text){
  const div = document.createElement('div');
  div.className = `msg ${type}`;
  div.textContent = text;
  log.prepend(div);
}

form?.addEventListener('submit', (e)=>{
  e.preventDefault();
  const text = input.value.trim();
  if(!text) return;
  push('user', text);
  push('bot', answer(text));
  input.value = '';
});
